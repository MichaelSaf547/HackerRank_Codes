1- There are three cases:

1-1 a[i] > b[j]: so add a[i] to the output string.
1-2 b[j] > a[i]: so ass b[j] to the output string.
1-3 a[i] == b[j]: here is the problem thing,

1-3-1 If strcmp find a different charcter before the end of one string
Ex, string 1 = "ABG", string 2 = "ABF". so here strcmp will find a different charcter before the end.

If it returns 0: that means both are equal so add any charcter to the output string.
If it returns > 0: that means string 2 is less than string 1 so add b[j] to the output string.
If it returns < 0: that means string 1 is less that string 2 so add a[i] to the output string.

1-3-2 If strcmp reaches the end of a string without finding a different charcter
Ex, string 1 = "BA", string 2 = "B", strcmp will return > 0, which will cause misleading by taking the b[j] charcter
so the output string will be = "BBA" --> b[0] + a[0] + a[1],
but this is not the best answer as the best is "BAB" --> a[0] + a[1] + b[0]
To solve this point at the start of the function add charcter 'z' at the end of both strings, 
so whenever the strcmp function reaches the end it will find 'z' which will reverse the answer instead of > 0, 
it will be < 0.